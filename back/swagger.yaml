swagger: '2.0'
info:
  version: 1.0.0
  title: Musinsa-API-docs
  description: Musinsa API문서
  servers:
    - description: Musinsa-Clone dev
      url: 'http://localhost:80/'
tags:
  - name: user
    description: API about user
paths:
  /api/user/signup:
    post:
      tags:
        - user
      summary: 회원가입
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              loginId:
                type: string
              password:
                type: string
              email:
                type: string
      responses:
        '200':
          $ref: '#/success'
        '401':
          description: 로그인 아이디 중복
          schema:
            properties:
              message:
                type: string
                example: 이미 사용중인 아이디 입니다
        '402':
          description: 이메일 중복
          schema:
            properties:
              message:
                type: string
                example: 이미 사용중인 이메일 입니다
        '500':
          $ref: '#/serverError'
  /api/user/signin:
    post:
      tags:
        - user
      summary: 로그인
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              loginId:
                type: string
              password:
                type: string
              passwordCheck:
                type: string
      responses:
        '200':
          description: 성공
          schema:
            properties:
              userData:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  nickname:
                    type: string
                  checkedCalendar:
                    type: string
                  ProfileImages:
                    type: object
                    properties:
                      src:
                        type: string
                  refreshToken:
                    type: string
                  accessToken:
                    type: string
        '401':
          description: 존재하지 않는 유저 (로그인 아이디가 틀린 경우)
          schema:
            properties:
              message:
                type: string
                example: null
        '402':
          description: 비밀번호 일치하지 않음 (로그인 아이디는 맞지만 비밀번호가 틀린 경우)
          schema:
            properties:
              message:
                type: string
                example: 패스워드가 일치하지 않습니다!
        '500':
          $ref: '#/serverError'
  /api/user/logout:
    post:
      tags:
        - user
      summary: 로그아웃
      parameters:
        - name: Authorization
          in: header
          required: true
      responses:
        '200':
          $ref: '#/success'
  /api/user/refresh:
    get:
      tags:
        - user
      summary: 토큰 refresh
      parameters:
        - name: Authorization
          in: header
          required: true
        - name: refresh
          in: header
          required: true
      responses:
        '200':
          description: 성공
          schema:
            properties:
              ok:
                type: boolean
                example: true
              data:
                type: object
                properties:
                  accessToken:
                    type: string
                    exmaple: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjU4MjA4NDQzLCJleHAiOjE2NTgyOTQ4NDN9.xI5ylpNtkeC5wnf4mnqcP3nbFMpm1mKjrHySxLJyN_4
                  refreshToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjU4MjA4NDQzLCJleHAiOjE2NTgyOTQ4NDN9.xI5ylpNtkeC5wnf4mnqcP3nbFMpm1mKjrHySxLJyN_4
        '403':
          description: 'refresh 토큰 발급 도중 access token, refresh token이 모두 헤더에 없는 경우'
          schema:
            properties:
              success:
                type: string
                example: Access token and refresh token are need for refresh!
        '405':
          description: refresh 토큰 발급 도중 토큰에 유저 정보가 없을 경우
          schema:
            properties:
              success:
                type: string
                example: No authorized!
        '406':
          description: refresh 토큰 발급 도중 토큰이 지급되지 않을 경우
          schema:
            properties:
              success:
                type: string
                example: accessToken이 지급되지 않았습니다
        '500':
          $ref: '#/serverError'
  /api/product/productList:
    get:
      tags:
        - product
      summary: 상품 리스트
      parameters:
        - name: Authorization
          in: header
          required: true
        - in: query
          name: page
          schema:
            type: integer
          description: 현재페이지 쿼리입니다. 현재 페이지 인덱스를 보내주세요. 아무것도 지급되지 않을 경우 자동으로 0 처리됩니다<br>`2페이지를 조회할 경우 2`
        - in: query
          name: price
          schema:
            type: integer
          description: '가격필터링용 쿼리입니다 가격 분류 인덱스를 정수로 보내주세요<br>`5만~10만의 상품을 조회할 경우 2`<br>[0 ~ 5만, 2- 5만~10만, 10만~20만, 20만~30만, 30만이상]'
        - in: query
          name: priceMin
          schema:
            type: integer
          description: 사용자지정 최소가격필터용 쿼리입니다. 최소 가격을 정수로 보내주세요<br>`최소가격 3만의 경우 - 30000`
        - in: query
          name: priceMax
          schema:
            type: integer
          description: 사용자지정 최대가격필터용 쿼리입니다. 최대 가격을 정수로 보내주세요<br>`최대가격 10만의 경우 - 100000`
        - in: query
          name: bigCategoryId
          schema:
            type: integer
          description: '상품 카테고리(대) 범주 필터링입니다. 대분류 카테고리 인덱스를 정수로 보내주세요 <br> `상의조회의 경우 1, 아우터조회의 경우 2`<br>대분류 - [''상의'', ''아우터'', ''바지'', ''원피스'', ''스커트'', ''스니커즈'', ''신발'', ''가방'', ''여성 가방'', ''스포츠/용품'', ''모자'', ''양말/레그웨어'', ''속옷'', ''선글라스/안경테'', ''악세서리'', ''시계'', ''주얼리'', ''뷰티'', ''디지털/테크'', ''생활/취미/예술'', ''책/음악/티켓'', ''반려동물'']'
        - in: query
          name: smallCategoryId
          schema:
            type: integer
          description: '상품 카테고리(소) 범주 필터링입니다. 소분류 카테고리 인덱스를 정수로 보내주세요 <br>`백팩 조회의 경우 bigCategoryId:1 && smallCategoryId:1` <br>대분류당 갯수 - [9, 12, 8, 3, 3, 3, 11, 13, 9, 13, 7, 2, 5, 3, 8, 5, 7, 12, 11, 11, 2, 2]'
      responses:
        '200':
          description: 성공 - productData 배열에 담긴체 100개 전달합니다(아래는 예시용 1개)
          schema:
            properties:
              productData:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    productTitle:
                      type: string
                      example: '[MONSTA X 민혁 착용] 리커버리 슬리퍼'
                    productPrice:
                      type: integer
                      example: 305360
                    likes:
                      type: integer
                      example: 222
                    comments:
                      type: integer
                      example: 826
                    ProductImg:
                      type: object
                      properties:
                        src:
                          type: string
                          example: Accessory/Accessory2
        '400':
          description: 상품 조회 결과가 없을 경우
          schema:
            properties:
              message:
                type: string
                example: 상품 조회 결과가 없습니다. 입력값을 다시 확인해주세요
        '500':
          $ref: '#/serverError'
  /api/product/productdetail:
    get:
      tags:
        - product
      summary: 상품 상세보기
      parameters:
        - name: Authorization
          in: header
          required: true
        - in: query
          name: productId
          schema:
            type: integer
          required: true
          description: 상품 id 쿼리입니다. 상품 식별 id 를 보내주세요
      responses:
        '200':
          description: 성공 - product 배열에 데이터들이 지급됩니다
          schema:
            properties:
              product:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 33
                    productTitle:
                      type: string
                      example: Chips
                    productPrice:
                      type: integer
                      example: 94160
                    views:
                      type: integer
                      example: 1661
                    likes:
                      type: integer
                      example: 418
                    comments:
                      type: integer
                      example: 541
                    gender:
                      type: integer
                      example: 0
                    season:
                      type: string
                      example: 2021 ALL
                    beRleased:
                      type: string
                      example: 2022-07-29T19:06:04.000Z
                    deliveryFrom:
                      type: boolean
                      example: true
                    deliveryWay:
                      type: boolean
                      example: true
                    deliveryCompany:
                      type: integer
                      example: CJ대한통운
                    nonMemberPrice:
                      type: integer
                      example: 85600
                    rookiePrice:
                      type: integer
                      example: 77040
                    memberPrice:
                      type: integer
                      example: 76184
                    bronzePrice:
                      type: integer
                      example: 75328
                    silverPrice:
                      type: integer
                      example: 74472
                    goldPrice:
                      type: integer
                      example: 73616
                    platinumPrice:
                      type: integer
                      example: 72760
                    diamondPrice:
                      type: integer
                      example: 71904
                    sells:
                      type: integer
                      example: 1843
                    BigCategoryId:
                      type: integer
                      example: 1
                    SmallCategoryId:
                      type: integer
                      example: 1
                    CustomCategories:
                      type: integer
                      example: 33
                    commentCount:
                      type: integer
                      example: 3
                    rated:
                      type: integer
                      example: 4.1
        '400':
          description: 상품 조회 결과가 없을 경우
          schema:
            properties:
              message:
                type: string
                example: 상품 조회 결과가 없습니다. 입력값을 다시 확인해주세요
        '500':
          $ref: '#/serverError'
success:
  description: 성공
  schema:
    properties:
      success:
        type: boolean
        example: true
serverError:
  description: 서버 에러
  schema:
    properties:
      message:
        type: string
        example: 서버 에러
