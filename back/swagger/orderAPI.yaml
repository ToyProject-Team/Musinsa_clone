/api/order/refundMyOrder:
  post:
    tags:
      - order
    summary: 상품 환불
    parameters:
      - name: Authorization
        in: header
        required: true
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            merchant_uid:
              type: string
            reason:
              type: string
            cancel_request_amount:
              type: string
            refund_holder:
              type: string
            refund_bank:
              type: string
            refund_account:
              type: string  
    responses:
      200:
        description: 성공 - 환불 시 어케가는지 아직 모름
        schema:
          properties:
            likeProduct:
              type: array
              items:
                type: object
                properties:
                  productPrice:
                    type: integer
                    example: 1
                  likes:
                    type: string
                    example: 845
                  productTitle:
                    type: string
                    example: Car
                  ProductImg:
                    type: object
                    properties:
                      src:
                        type: string
                        example: Accessory/Accessory2
      400:
        description: 주문 상품에 대한 데이터가 없을 경우
        schema:
          properties:
            message:
              type: string
              example: 주문 상품에 대한 데이터가 없습니다      
      500:
        $ref: "./openapi.yaml#/serverError"
/api/mypage/favoriteGoods/del:
  delete:
    tags:
      - mypage
    summary: 좋아요 취소
    parameters:
      - name: Authorization
        in: header
        required: true
      - name: productId
        in: body
        type: object
        properties:
          productId:
            type: array
            items:
              type: integer
              format: int64
            example: [1, 2, 3]
    responses:
      200:
        $ref: "./openapi.yaml#/success"
      400:
        description: productId 에 대한 조회 결과가 없을 경우(입력값이 undefined 인지 확인)
        schema:
          properties:
            message:
              type: string
              example: 입력값을 다시 확인해주세요
      401:
        description: 유저의 조회 결과가 없습니다 - 토큰에 대한 사용자 정보가 데이터베이스에 존재하지 않습니다
        schema:
          properties:
            message:
              type: string
              example: 유저의 조회 결과가 없습니다
      402:
        description: 좋아요하지 않은 상품을 삭제 시도할 경우
        schema:
          properties:
            message:
              type: string
              example: 좋아요하지 않은 상품을 삭제 시도하셨습니다      
      500:
        $ref: "./openapi.yaml#/serverError"