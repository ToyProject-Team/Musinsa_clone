/api/auth/signup:
  post:
    tags:
      - auth
    summary: 회원가입
    parameters:
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            loginId:
              type: string
            password:
              type: string
            email:
              type: string
            agreement:
              type: string
              example: 1
            questionType:
              type: string
              example: 6
            questionAnswer:
              type: string
              example: 프로그래밍
            address:
              type: string
              example: 전라남도 서구 금호동 101동 1001호
            phoneNumber:
              type: string
              example: 01051614563
    responses:
      200:
        $ref: "./openapi.yaml#/success"
      401:
        description: 로그인 아이디 중복
        schema:
          properties:
            message:
              type: string
              example: 이미 사용중인 아이디 입니다
      402:
        description: 이메일 중복
        schema:
          properties:
            message:
              type: string
              example: 이미 사용중인 이메일 입니다
      500:
        $ref: "./openapi.yaml#/serverError"

/api/auth/signin:
  post:
    tags:
      - auth
    summary: 로그인
    parameters:
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            loginId:
              type: string
            password:
              type: string
            passwordCheck:
              type: string
    responses:
      200:
        description: 성공
        schema:
          properties:
            userData:
              type: object
              properties:
                id:
                  type: integer
                email:
                  type: string
                nickname:
                  type: string
                checkedCalendar:
                  type: string
                ProfileImages:
                  type: object
                  properties:
                    src:
                      type: string
                refreshToken:
                  type: string
                accessToken:
                  type: string
      401:
        description: 존재하지 않는 유저 (로그인 아이디가 틀린 경우)
        schema:
          properties:
            message:
              type: string
              example: 
      402:
        description: 비밀번호 일치하지 않음 (로그인 아이디는 맞지만 비밀번호가 틀린 경우)
        schema:
          properties:
            message:
              type: string
              example: 패스워드가 일치하지 않습니다!
      500:
        $ref: "./openapi.yaml#/serverError"

/api/auth/logout:
  post:
    tags:
      - auth
    summary: 로그아웃
    parameters:
      - name: Authorization
        in: header
        required: true
    responses:
      200:
        $ref: "./openapi.yaml#/success"
/api/auth/refresh:
  get:
    tags:
      - auth
    summary: 토큰 refresh
    parameters:
      - name: Authorization
        in: header
        required: true
      - name: refresh
        in: header
        required: true
    responses:
      200:
        description: 성공
        schema:
          properties:
            ok:
              type: boolean
              example: true
            data:
              type: object
              properties:
                accessToken:
                  type: string
                  exmaple: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjU4MjA4NDQzLCJleHAiOjE2NTgyOTQ4NDN9.xI5ylpNtkeC5wnf4mnqcP3nbFMpm1mKjrHySxLJyN_4"
                refreshToken:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjU4MjA4NDQzLCJleHAiOjE2NTgyOTQ4NDN9.xI5ylpNtkeC5wnf4mnqcP3nbFMpm1mKjrHySxLJyN_4"
      403:
        description: refresh 토큰 발급 도중 access token, refresh token이 모두 헤더에 없는 경우
        schema:
          properties:
            success:
              type: string
              example: Access token and refresh token are need for refresh!
      405:
        description: refresh 토큰 발급 도중 토큰에 유저 정보가 없을 경우
        schema:
          properties:
            success:
              type: string
              example: No authorized!
      406:
        description: refresh 토큰 발급 도중 토큰이 지급되지 않을 경우
        schema:
          properties:
            success:
              type: string
              example: accessToken이 지급되지 않았습니다
      500:
        $ref: "./openapi.yaml#/serverError"
/api/auth/kakao:
  get:
    tags:
      - auth
    summary: 소셜 로그인(카카오)
    responses:
      200:
        schema:
          properties:
            url:
              type: string
              example: https://kauth.kakao.com/oauth/authorize?client_id=b7ac8922efe0c82210458ea8fcee89a4&redirect_uri=http://localhost/api/auth/kakao/callback&response_type=code&scope=profile_nickname,account_email

/api/auth/kakao/callback:
  post:
    tags:
      - auth
    summary: 소셜 로그인(카카오)
    responses:
      200:
        schema:
          properties:
            refreshToken:
              type: string
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NTk1MTI5OTQsImV4cCI6MTY2MDcyMjU5NH0.I-9dst19UegB0a0RLXGND00auSNabUywhfUf97-waRM
            accessToken:
              type: string
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NTk1MTI5OTQsImV4cCI6MTY1OTU5OTM5NH0.vME0u2mgPL1xeu0riuwXnIFyD50fBm2bd9R3zzDpuI4

/api/auth/authEmail:
  post:
    tags:
      - auth
    summary: 이메일 인증(회원가입 절차)
    parameters:
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            email:
              type: string
              example: sola2014@naver.com
    responses:
      200:
        $ref: "./openapi.yaml#/success"
      400:
        description: 네이버 이메일이 조회되지 않음
        schema:
          properties:
            message:
              type: string
              example: 유효하지 않은 이메일입니다
      401:
        description: refresh 토큰 발급 도중 토큰이 지급되지 않을 경우
        schema:
          properties:
            success:
              type: string
              example: accessToken이 지급되지 않았습니다
      500:
        $ref: "./openapi.yaml#/serverError"
        
/api/auth/sendSMS:
  post:
    tags:
      - auth
    summary: 휴대폰 인증번호 전송(회원가입 절차)
    parameters:
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            phoneNumber:
              type: string
              example: 01062077206
    responses:
      200:
        $ref: "./openapi.yaml#/success"
      500:
        $ref: "./openapi.yaml#/serverError"

/api/auth/checkSMS:
  post:
    tags:
      - auth
    summary: 휴대폰 인증번호 확인(회원가입 절차)
    parameters:
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            phoneNumber:
              type: string
              example: 01062077206
            code:
              type: string
              example: 68749
    responses:
      200:
        $ref: "./openapi.yaml#/success"
      400:
        description: 인증 시간이 만료된 경우(redis 토큰 만료[180초])
        schema:
          properties:
            message:
              type: string
              example: 인증 시간이 만료됐습니다
      401:
        description: 인증 번호가 틀렸을 경우
        schema:
          properties:
            success:
              type: string
              example: 인증 번호가 틀리셨습니다
      500:
        $ref: "./openapi.yaml#/serverError"
/tokenError:
  post:
    tags:
      - auth
    summary: 토큰 에러 모음
    responses:
      401:
        description: 토큰이 지급되지 않을 경우
        schema:
          properties:
            success:
              type: string
              example: accessToken이 지급되지 않았습니다
      402:
        description: 토큰이 검증에 실패했거나 만료됐을 경우
        schema:
          properties:
            success:
              type: string
              example: jwt expired
      403:
        description: refresh 토큰 발급 도중 access token, refresh token이 모두 헤더에 없는 경우
        schema:
          properties:
            success:
              type: string
              example: Access token and refresh token are need for refresh!
      405:
        description: refresh 토큰 발급 도중 토큰에 유저 정보가 없을 경우
        schema:
          properties:
            success:
              type: string
              example: No authorized!
      406:
        description: refresh 토큰 발급 도중 토큰이 지급되지 않을 경우
        schema:
          properties:
            success:
              type: string
              example: accessToken이 지급되지 않았습니다
      407:
        description: refresh 토큰 발급 도중 access 토큰이 만료되지 않았을경우
        schema:
          properties:
            success:
              type: string
              example: Access token is not expired!
$ref: "./productAPI.yaml"

